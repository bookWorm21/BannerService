version: "3"

services:
  banner_db:
    image: postgres:14.2
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASS}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_NAME}
    expose:
      - "5432"
    ports:
      - "5432:5432"
    volumes:
      - ./.pgdata:/var/lib/postgresql/data
      - ./postgres/schemas/banner_db.sql:/docker-entrypoint-initdb.d/banner_db.sql
      - ./postgres/data/initial_data.sql:/docker-entrypoint-initdb.d/initial_data.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: on-failure
    networks:
      - application

  banner-service-go:
    image: banner_service_go
    depends_on:
      banner_db:
        condition: service_healthy
    networks:
      - application
    ports:
      - "8080:8080"
    volumes:
      - ./config/.env:/app/config/.env
    restart: on-failure

networks:
  application:
    driver: bridge
